package main

import (
	"fmt"
)

func main() {

	var str string = `Ассоциативные массивы`
	fmt.Println(str)


	//В языке го мап ссылочный тип reference type, поэтому одного объявления
	// типа мап не достаточно
	//к примеру такой код скомпилируется но выдаст ощибку assignment to nil map (SA5000)
	//var me map[string]string
	//me["foo"] = "bar"
	//Чтобы объект ссылочного типа можно было использовать, его нужно сначала создать (инициализировать)
	// встроенной функцией make()

	/* Встроенная функция make() универсальный конструктор объектов ссылочного типа, она
	применяется для создания объектов всех ссылочных типов
	*/

	//Сложный литерал composite literal
	/*
	 * вы можете не декларировать тип переменной, например string, а просто создать
	 * значение литерально
	 * */
	 
	 MyString := "Моя строка"
	 
	 //такая нотация работает и для сложных типов
	 
	 MyStringMap := map[string]string{"first": "первый", "second": "второй"}
	 /*В данном случае композитный литерал создает map без использования
	  * make и уже с иницилиализированными парами ключ-значение.
	  * 
	  * /

}
